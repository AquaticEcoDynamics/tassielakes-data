function importBoMmetdata(sMetDir)
% Function to import the swan met data and save to a structured type
% swanmet.mat
% sMetDir is the file path in which the BoM data files are stored. Remember
% to add "\" at the end of the path!!!
% Add or remove headers under cHeader based on your data. Import of Date in
% the right format should be checked!

dirlist = dir(sMetDir);

for iMet = 3:length(dirlist)
    
    disp(['Processing File ',num2str(iMet - 2)]);
    filename = [sMetDir,dirlist(iMet).name];
    fid = fopen(filename,'rt');
    
    
    %     cHeader = { ...
    %         'hm_QC';...
    %         'StationID';...
    %         'Year';...
    %         'Month';...
    %         'Day';...
    %         'Hours';...
    %         'Minute';...
    %         'Year';...
    %         'Month';...
    %         'Day';...
    %         'Hours';...
    %         'Minute';...
    %         'Rain_9am';...
    %         'Rain_9am_QC';...
    %         'AirTemperature';...
    %         'AirTemperature_QC';...
    %         'RelativeHumidity';...
    %         'RelativeHumidity_QC';...
    %         'WindSpeed';...
    %         'WindSpeed_QC';...
    %         'WindDir';...
    %         'WindDir_QC';...
    %         'AirPressure_MSL';...
    %         'AirPressure_MSL_QC';...
    %         'Total_Cloud';...
    %         'Total_Cloud';...
    %         'AWS_Flag_QC';...
    %         };
    
    cHeader = { ...
        'hm_QC';...
        'StationID';...
        'Year';...
        'Month';...
        'Day';...
        'Hours';...
        'Minute';...
        'Year_S';...
        'Month_S';...
        'Day_S';...
        'Hours_S';...
        'Minute_S';...
        'Rain_9am';...
        'Rain_9am_QC';...
        'Rain_9am_Count';...
        'AirTemperature';...
        'AirTemperature_QC';...
        'AirTemperature_Count';...
        'AirTemperature_Max';...
        'AirTemperature_Max_QC';...
        'AirTemperature_Max_Count';...
        'AirTemperature_Min';...
        'AirTemperature_Min_QC';...
        'AirTemperature_Min_Count';...
        'RelativeHumidity';...
        'RelativeHumidity_QC';...
        'WindSpeed';...
        'WindSpeed_QC';...
        'WindSpeed_Count';...
        'WindSpeed_MAX';...
        'WindSpeed_MAX_QC';...
        'WindSpeed_MAX_Count';...
        'WindSpeed_MIN';...
        'WindSpeed_MIN_QC';...
        'WindSpeed_MIN_Count';...
        'WindSpeed_3Sec';...
        'WindSpeed_3Sec_QC';...
        'WindSpeed_3Sec_Count';...
        'WindDir';...
        'WindDir_QC';...
        'WindDir_Count';...
        'CloudHeight_First_60';...
        'CloudHeight_First_60_QC';...
        'CloudHeight_Second_60';...
        'CloudHeight_Second_60_QC';...
        'CloudHeight_Third_60';...
        'CloudHeight_Third_60_QC';...
        'CloudHeight_Fourth_60';...
        'CloudHeight_Fourth_60_QC';...
        'CloudHeight_Fith_60';...
        'CloudHeight_Fith_60_QC';...
        'CloudAmount_First';...
        'CloudAmount_First_QC';...
        'CloudHeight_First';...
        'CloudHeight_First_QC';...
        'CloudAmount_Second';...
        'CloudAmount_Second_QC';...
        'CloudHeight_Second';...
        'CloudHeight_Second_QC';...
        'CloudAmount_Third';...
        'CloudAmount_Third_QC';...
        'CloudHeight_Third';...
        'CloudHeight_Third_QC';...
        'HASH';...
        };
    
    
    
    
    x  = length(cHeader);
    textformat = [repmat('%s ',1,x)];
    datacell = textscan(fid,textformat,...
        'Headerlines',1,...
        'Delimiter',',');
    fclose(fid);
    
    for iHeader = 1:length(cHeader)
        sCompStrFull = cHeader{iHeader};
        sCompStr = sCompStrFull(end-2:end);
        
        if strcmp(sCompStr,'_QC') == 0
            if strcmp(cHeader{iHeader},'Date') == 1
                met.(cHeader{iHeader}) = datenum(datacell{iHeader},'dd/mm/yyyy HH:MM');
            else
                met.(cHeader{iHeader}) = str2double(datacell{iHeader});
            end
        end
        
    end
    
    if ~isfield(met,'Date')
        if isfield(met,'Year') & ...
                isfield(met,'Month') & ...
                isfield(met,'Day') & ...
                isfield(met,'Hours') & ...
                isfield(met,'Minute')
            
            met.Date = datenum(met.Year,met.Month,met.Day,met.Hours,met.Minute,00);
            
        end
    end
    
    % sort and remove duplicated dates (if any);
    
    vars = fieldnames(met);
    
    [met.Date,ind] = unique(met.Date);
    
    for j = 1:length(vars)
        if strcmpi(vars{j},'Date') == 0
            met.(vars{j}) = met.(vars{j})(ind);
        end
    end
    
    
    
    nSiteID = met.StationID(1);
    
    switch nSiteID
        case 9127
            metdata.mosman_park = met;
            metdata.mosman_park.lat = -32.0200;
            metdata.mosman_park.lon = 115.7692;
        case 9192
            metdata.fremantle = met;
            metdata.fremantle.lat = -32.0533;
            metdata.fremantle.lon = 115.7647;
        case 9215
            metdata.swanbourne = met;
            metdata.swanbourne.lat = -31.9558;
            metdata.swanbourne.lon = 115.7619;
        case 9977
            metdata.mandurah_new = met;
            metdata.mandurah_new.lat = -32.5219;
            metdata.mandurah_new.lon = 115.7119;
        case 9887
            metdata.mandurah_old = met;
            metdata.mandurah_old.lat = -32.5219;
            metdata.mandurah_old.lon = 115.7119;
        case 9572
            metdata.Halls_Head = met;
            metdata.Halls_Head.lat = -32.5385;
            metdata.Halls_Head.lon = 115.7002;
        case 9538
            metdata.dwellingup = met;
            metdata.dwellingup.lat = -32.7103;
            metdata.dwellingup.lon = 116.0594;
        case 9596
            metdata.pinjarra = met;
            metdata.pinjarra.lat = -32.6272;
            metdata.pinjarra.lon = 115.8747;
        case 9039
            metdata.serpentine = met;
            metdata.serpentine.lat = -32.3536;
            metdata.serpentine.lon = 116.0050;
        case 9115
            metdata.serpentine_dam = met;
            metdata.serpentine_dam.lat = -32.4022;
            metdata.serpentine_dam.lon = 116.1039;
        case 9877
            metdata.ludlow = met;
            metdata.ludlow.lat = -33.6033;
            metdata.ludlow.lon = 115.4983;
        case 9515
            metdata.busselton_shire = met;
            metdata.busselton_shire.lat = -33.6611;
            metdata.busselton_shire.lon = 115.3456;
        case 9569
            metdata.busselton_shire_old = met;
            metdata.busselton_shire_old.lat = -33.6611;
            metdata.busselton_shire_old.lon = 115.3456;
        case 9937
            metdata.busselton_jetty = met;
            metdata.busselton_jetty.lat = -33.6294;
            metdata.busselton_jetty.lon = 115.3383;
        case 9603
            metdata.busselton_aero = met;
            metdata.busselton_aero.lat = -33.6858;
            metdata.busselton_aero.lon = 115.4008;
        case 9021
            metdata.airport = met;
            metdata.airport.lat = -31.9275;
            metdata.airport.lon = 115.9764;
        case 9225
            metdata.metro = met;
            metdata.metro.lat = -31.9192;
            metdata.metro.lon = 115.8728;
        case 9172
            metdata.jandakot = met;
            metdata.jandakot.lat = -32.1011;
            metdata.jandakot.lon = 115.8794;
        case 96033
            metdata.liawenee = met;
            metdata.liawenee.lat = -41.8997;
            metdata.liawenee.lon = 146.6694;
        case 91311
            metdata.launceston_airport = met;
            metdata.launceston_airport.lat = -41.54927;
            metdata.launceston_airport.lon = 147.2144;
            
            
        otherwise
            disp('StationID not found');
    end
    
    
end

save metdata.mat metdata -mat -v7